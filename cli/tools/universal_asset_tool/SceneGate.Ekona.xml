<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SceneGate.Ekona</name>
    </assembly>
    <members>
        <member name="T:SceneGate.Ekona.Containers.Rom.AgeRating">
            <summary>
            Age rating for a region.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.AgeRating.Enabled">
            <summary>
            Gets or sets a value indicating whether this rating applies or not.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.AgeRating.Prohibited">
            <summary>
            Gets or sets a value indicating whether the program is prohibited in the region.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.AgeRating.Age">
            <summary>
            Gets or sets the minimal age for the program. The value meaning may vary per region.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.ArmEncodeFieldFinder">
            <summary>
            Find the constant with the decoded size of the ARM.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.ArmEncodeFieldFinder.SearchEncodedSizeAddress(Yarhl.IO.IBinary,SceneGate.Ekona.Containers.Rom.ProgramInfo)">
            <summary>
            Searchs the encoded size address.
            </summary>
            <param name="arm">The ARM file to analyze.</param>
            <param name="info">The information of the program.</param>
            <returns>The encoded size address. 0 if not found.</returns>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.Banner">
            <summary>
            Banner of a program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.Version">
            <summary>
            Gets or sets the version of the banner model.
            </summary>
            <remarks>
            <para>Only the following version are valid:</para>
            <list type="bullet">
            <item><description>0.1: Original</description></item>
            <item><description>0.2: Support Chinese title</description></item>
            <item><description>0.3: Support Chinese and Korean titles</description></item>
            <item><description>1.3: Support Chinese and Korean titles and animated DSi icon.</description></item>
            </list>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Invalid version number.</exception>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.SupportAnimatedIcon">
            <summary>
            Gets a value indicating whether the banner supports animated icons (version >= 1.3).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.ChecksumBase">
            <summary>
            Gets or sets the CRC-16 checksum for the banner binary data of version 0.1.
            </summary>
            <remarks>This field may be null if the model was not deserialized from binary data.</remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.ChecksumChinese">
            <summary>
            Gets or sets the CRC-16 checksum for the banner binary data of version 0.2
            that includes Chinese title.
            </summary>
            <remarks>This field may be null if the model was not deserialized from binary data.</remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.ChecksumKorean">
            <summary>
            Gets or sets the CRC-16 checksum for the banner binary data of version 0.3
            that includes Chinese and Korean titles.
            </summary>
            <remarks>This field may be null if the model was not deserialized from binary data.</remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.ChecksumAnimatedIcon">
            <summary>
            Gets or sets the CRC-16 checksum for the animated DSi icon.
            </summary>
            <remarks>This field may be null if the model was not deserialized from binary data.</remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.JapaneseTitle">
            <summary>
            Gets or sets the Japenese title.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.EnglishTitle">
            <summary>
            Gets or sets the English title.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.FrenchTitle">
            <summary>
            Gets or sets the French title.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.GermanTitle">
            <summary>
            Gets or sets the German title.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.ItalianTitle">
            <summary>
            Gets or sets the Italian title.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.SpanishTitle">
            <summary>
            Gets or sets the Spanish title.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.ChineseTitle">
            <summary>
            Gets or sets the Chinese title.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Banner.KoreanTitle">
            <summary>
            Gets or sets the Korean title.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.Banner2Binary">
            <summary>
            Convert a container with banner information into a binary stream.
            </summary>
            <remarks>
            <para>Supported versions: 0.1, 0.2, 0.3 and 1.3 (except animated icons).</para>
            <para>The input container expects to have:</para>
            <list type="table">
            <item><term>/info</term><description>Program banner content with Banner format.</description></item>
            <item><term>/icon</term><description>Program icon with IndexedPaletteImage format.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.Banner2Binary.Convert(Yarhl.FileSystem.NodeContainerFormat)">
            <summary>
            Write a container banner into a binary format.
            </summary>
            <param name="source">Banner to serialize into binary format.</param>
            <returns>The new serialized binary.</returns>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.Binary2Banner">
            <summary>
            Convert a binary format into a container with the banner information.
            </summary>
            <remarks>
            <para>Supported versions: 0.1, 0.2, 0.3 and 1.3 (except animated icons).</para>
            <para>The new container hierarchy is:</para>
            <list type="table">
            <item><term>/info</term><description>Program banner content.</description></item>
            <item><term>/icon</term><description>Program icon.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Binary2Banner.NumAnimatedImages">
            <summary>
            Gets the maximum number of animated images.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.Binary2Banner.GetSize(System.IO.Stream)">
            <summary>
            Gets the serialized size of the banner including padding.
            </summary>
            <param name="stream">The stream to analyze.</param>
            <remarks>
            The stream must be in the start of the banner.
            The position is restored to the start of the banner.
            </remarks>
            <returns>The expected size of the binary banner.</returns>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.Binary2Banner.GetSize(System.Version)">
            <summary>
            Gets the serialized size of the banner including padding.
            </summary>
            <param name="version">Version of the banner.</param>
            <returns>The expected size of the binary banner.</returns>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.Binary2Banner.Convert(Yarhl.IO.IBinary)">
            <summary>
            Read a banner from a binary format.
            </summary>
            <param name="source">Source binary to read from.</param>
            <returns>The new container with the banner.</returns>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.Binary2NitroRom">
            <summary>
            Converter for binary formats into a NitroRom container.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.Binary2NitroRom.Initialize(SceneGate.Ekona.Security.DsiKeyStore)">
            <summary>
            Initializes the converter with the key store to validate signatures.
            </summary>
            <param name="parameters">The key store.</param>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.Binary2NitroRom.Convert(Yarhl.IO.IBinary)">
            <summary>
            Read the internal info of a ROM file.
            </summary>
            <param name="source">Source binary format to read from.</param>
            <returns>The new node container.</returns>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.Binary2RomHeader">
            <summary>
            Converter for binary ROM header into an object.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.Binary2RomHeader.HeaderSizeOffset">
            <summary>
            Gets the offset in the header containing the header size value.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.Binary2RomHeader.Initialize(SceneGate.Ekona.Security.DsiKeyStore)">
            <summary>
            Initialize the converter with the key store to enable additional features.
            </summary>
            <remarks>
            The key store is used to verify a special token and set the value of `DisableSecureArea`.
            Otherwise, it will always be `false`. The required key is `BlowfishDsKey`.
            </remarks>
            <param name="parameters">The converter parameters.</param>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.Binary2RomHeader.Convert(Yarhl.IO.IBinary)">
            <summary>
            Convert a binary format into a ROM header object.
            </summary>
            <param name="source">The stream to read.</param>
            <returns>The new ROM header.</returns>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.DeviceUnitKind">
            <summary>
            Device unit compatible for the ROM.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DeviceUnitKind.DS">
            <summary>
            DS only game.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DeviceUnitKind.DSiEnhanced">
            <summary>
            DSi game compatible on DS units too.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DeviceUnitKind.DSiExclusive">
            <summary>
            DSi exclusive game.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.DsiCryptoMode">
            <summary>
            Security mode for DSi ROMs.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DsiCryptoMode.TwlExclusiveRegion">
            <summary>
            ROM contains a TWL-exclusive region (DSi games).
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DsiCryptoMode.Modcrypted">
            <summary>
            ROM is encrypted with modcrypt.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DsiCryptoMode.ModcryptKeyDebug">
            <summary>
            ROM modcryption uses debug key.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DsiCryptoMode.DisableDebug">
            <summary>
            Disable debug features.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.DsiProgramInfo">
            <summary>
            Information of DSi programs.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.GlobalMemoryBanks">
            <summary>
            Gets or sets the global memory banks settings (MBK 1 - 5) for the DSi extended memory.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.LocalMemoryBanksArm9">
            <summary>
            Gets or sets the local memory banks settings for ARM9 (MBK 6 - 8) for the DSi extended memory.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.LocalMemoryBanksArm7">
            <summary>
            Gets or sets the local memory banks settings for ARM7 (MBK 6 - 8) for the DSi extended memory.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.GlobalMbk9Settings">
            <summary>
            Gets or sets the global memory bank 9 settings: WRAM slot write protect.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.GlobalWramCntSettings">
            <summary>
            Gets or sets the WRAMCNT register settings.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.StartJumpKind">
            <summary>
            Gets or sets the program start jump kind.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.AccessControl">
            <summary>
            Gets or sets the access control for DSi features.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.ScfgExtendedArm7">
            <summary>
            Gets or sets some extended features of DSi ARM7 control register (SCFG).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.Arm9iRamAddress">
            <summary>
            Gets or sets the start of the RAM address for the ARM9i program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.StorageDeviceListArm7RamAddress">
            <summary>
            Gets or sets the SD/eMMC device list ARM7 RAM address.
            0x400 bytes initialized by the firmware.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.Arm7iRamAddress">
            <summary>
            Gets or sets the start of the RAM address for the ARM7i program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.StorageShared20Length">
            <summary>
            Gets or sets the length for the file in SD/eMMC "shared2/0000".
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.StorageShared21Length">
            <summary>
            Gets or sets the length for the file in SD/eMMC "shared2/0001".
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.EulaVersion">
            <summary>
            Gets or sets the version of the EULA agreement.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.UseRatings">
            <summary>
            Gets or sets the use ratings.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.StorageShared22Length">
            <summary>
            Gets or sets the length for the file in SD/eMMC "shared2/0002".
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.StorageShared23Length">
            <summary>
            Gets or sets the length for the file in SD/eMMC "shared2/0003".
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.StorageShared24Length">
            <summary>
            Gets or sets the length for the file in SD/eMMC "shared2/0004".
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.StorageShared25Length">
            <summary>
            Gets or sets the length for the file in SD/eMMC "shared2/0005".
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.Arm9iParametersTableOffset">
            <summary>
            Gets or sets the offset in the ARM9i program to the code parameters.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.Arm7iParametersTableOffset">
            <summary>
            Gets or sets the offset in the ARM7i program to the code parameters.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.ModcryptArea1Target">
            <summary>
            Gets or sets the first target area to have encryption modcrypt.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.ModcryptArea2Target">
            <summary>
            Gets or sets the second target area to have encryption modcrypt.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.TitleId">
            <summary>
            Gets or sets the title ID of the program (similar to 3DS).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.StoragePublicSaveLength">
            <summary>
            Gets or sets the length of the "public.sav" file for DSiWare.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.StoragePrivateSaveLength">
            <summary>
            Gets or sets the length of the "private.sav" file for DSiWare.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.AgeRatingCero">
            <summary>
            Gets or sets the age rating CERO (Japan).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.AgeRatingEsrb">
            <summary>
            Gets or sets the age rating ESRB (US / Canada).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.AgeRatingUsk">
            <summary>
            Gets or sets the age rating USK (Germany).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.AgeRatingPegiEurope">
            <summary>
            Gets or sets the age rating PEGI (Pan-Europe).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.AgeRatingPegiPortugal">
            <summary>
            Gets or sets the age rating PEGI for Portugal.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.AgeRatingPegiUk">
            <summary>
            Gets or sets the age rating PEGI and BBFC (UK).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.AgeRatingAgcb">
            <summary>
            Gets or sets the age rating AGCB (Australia).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.AgeRatingGrb">
            <summary>
            Gets or sets the age rating GRB (South Korea).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.Arm9SecureMac">
            <summary>
            Gets or sets the SHA1-HMAC of the ARM9 with encrypted secure area.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.Arm7Mac">
            <summary>
            Gets or sets the SHA1-HMAC of the ARM7.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.DigestMain">
            <summary>
            Gets or sets the SHA1-HMAC of digest block data.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.Arm9iMac">
            <summary>
            Gets or sets the SHA1-HMAC of the ARM9i program decrypted.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.Arm7iMac">
            <summary>
            Gets or sets the SHA1-HMAC of the ARM7i program decrypted.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.Arm9Mac">
            <summary>
            Gets or sets the SHA1-HMAC of the ARM9 program without secure area.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.DsiProgramInfo.DigestHashesStatus">
            <summary>
            Gets or sets the status of the digest hashes.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.DsiRomFeatures">
            <summary>
            ROM features for DSi or new DS games.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DsiRomFeatures.DsiTouchscreenSound">
            <summary>
            TSC touchscreen / sound controller for DSi.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DsiRomFeatures.RequireEula">
            <summary>
            Require to accept the EULA agreement.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DsiRomFeatures.SaveBannerIcon">
            <summary>
            Use in the launcher the icon from banner.sav instead of the ROM banner.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DsiRomFeatures.ShowWifiIcon">
            <summary>
            Show in the launcher the Wi-Fi connection icon.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DsiRomFeatures.ShowWirelessIcon">
            <summary>
             Show in the launcher the DS Wireless icon.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DsiRomFeatures.NitroBannerSigned">
            <summary>
            DS ROM contains an HMAC of the icon.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DsiRomFeatures.NitroProgramSigned">
            <summary>
            DS Program contains an HMAC and RSA signature of the header and programs.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.DsiRomFeatures.DeveloperApp">
            <summary>
            ROM is a developer application.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.GlobalMemoryBankSettings">
            <summary>
            DSi extended memory global memory bank settings (MBK 1 to 5).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.GlobalMemoryBankSettings.Processor">
            <summary>
            Gets or sets the processor reserved for this memory.
            </summary>
            <remarks>
            For MBK1 only ARM9 or ARM7.
            For MBK2-3: also DSP for code.
            For MBK4-5: also DSP for data.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.GlobalMemoryBankSettings.OffsetSlot">
            <summary>
            Gets or sets the offset slot in blocks.
            </summary>
            <remarks>
            For MBK1: 64 KB units.
            For MBK2-5: 32 KB units.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.GlobalMemoryBankSettings.Enabled">
            <summary>
            Gets or sets a value indicating whether this memory bank is enabled.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.IconAnimation2AnimatedImage">
            <summary>
            Converter for ROM banner animated icons into an animated image.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.IconAnimation2AnimatedImage.Convert(Yarhl.FileSystem.NodeContainerFormat)">
            <summary>
            Convert the 'animated' node from the ROM banner into an animated image.
            </summary>
            <param name="source">The animated node of the ROM banner.</param>
            <returns>A new animated image.</returns>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.IconAnimationFrame">
            <summary>
            Frame definition for the ROM animated icon.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.IconAnimationFrame.Duration">
            <summary>
            Gets or sets the duration of the frame in milliseconds.
            </summary>
            <remarks>
            The resolution is 60 Hz.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.IconAnimationFrame.BitmapIndex">
            <summary>
            Gets or sets the index of the bitmap for this frame.
            </summary>
            <remarks>
            There are maximum 8 bitmaps.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.IconAnimationFrame.PaletteIndex">
            <summary>
            Gets or sets the palette to use for the bitmap of this frame.
            </summary>
            <remarks>
            There are maximum 8 palettes.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.IconAnimationFrame.FlipHorizontal">
            <summary>
            Gets or sets a value indicating whether the bitmap should flip horizontally.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.IconAnimationFrame.FlipVertical">
            <summary>
            Gets or sets a value indicating whether the bitmap should flip vertically.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.IconAnimationSequence">
            <summary>
            Sequence of definition of frames for the ROM animated icon.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.IconAnimationSequence.Frames">
            <summary>
            Gets the collection of frames.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.LocalMemoryBankSettings">
            <summary>
            DSi extended memory local (to a processor) memory bank settings (MBK 6 to 8).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.LocalMemoryBankSettings.StartAddressSlot">
            <summary>
            Gets or sets the start address slot.
            </summary>
            <remarks>
            Final address is: 0x03000000 + value * (0x010000 for MBK6 or 0x8000 for 7-8).
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.LocalMemoryBankSettings.ImageSize">
            <summary>
            Gets or sets the image size kind.
            </summary>
            <remarks>
            According to existing research:
            MBK6: 0 or 1 = 64 KB /slot0, 2 = 128 KB / slot0-2, 3 = 256 KB / slot0-3
            MBK7-8: 0 = 32 KB / slot0, 1 = 64 KB / slot0-1, 2 = 128 KB / slot0-3, 3 = 256 KB / slot0-7.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.LocalMemoryBankSettings.EndAddressSlot">
            <summary>
            Gets or sets the end address slot.
            </summary>
            <remarks>
            Final address is: 0x03000000 + value * (0x010000 for MBK6 or 0x8000 for 7-8) - 1.
            </remarks>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.MemoryBankProcessor">
            <summary>
            Gets or sets the processor assigned to a memory bank.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.MemoryBankProcessor.Arm9">
            <summary>
            ARM9 processor.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.MemoryBankProcessor.Arm7">
            <summary>
            ARM7 processor.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.MemoryBankProcessor.Dsp2">
            <summary>
            DSP for value 2 (code?).
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.MemoryBankProcessor.Dsp3">
            <summary>
            DSP for value 3 (data?).
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.ModcryptTargetKind">
            <summary>
            Target area to modcrypt.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ModcryptTargetKind.None">
            <summary>
            No area have modcrypt.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ModcryptTargetKind.Arm9">
            <summary>
            ARM9 program.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ModcryptTargetKind.Arm7">
            <summary>
            ARM7 program.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ModcryptTargetKind.Arm9i">
            <summary>
            ARM9i (DSi) program.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ModcryptTargetKind.Arm9iSecureArea">
            <summary>
            ARM9i (DSi) secure area program only.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ModcryptTargetKind.Arm7i">
            <summary>
            ARM7i (DSi) program.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ModcryptTargetKind.Unknown">
            <summary>
            Unknown area.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.NitroProgramCodeParameters">
            <summary>
            Nitro and twilight parameters related to the code program (arm9).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroProgramCodeParameters.ProgramParameterOffset">
            <summary>
            Gets or sets the offsets to the ARM9 parameters table offset in DS programs.
            DSi programs have this value in the header.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroProgramCodeParameters.NitroOverlayHMacOffset">
            <summary>
            Gets or sets the offset inside the decompressed ARM9 to the list of HMAC-SHA1
            hashes of each compressed overlay (only DS games).
            </summary>
            <remarks>
            The key is inside the ARM9 as well (`HMacKeyDSiGames`).
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroProgramCodeParameters.ItcmBlockInfoOffset">
            <summary>
            Gets or sets the ITCM first block info offset.
            </summary>
            <remarks>
            A block info consists in two uint values: output RAM address and size.
            After moving the ITCM to the output, is clean so we can reuse the place for BSS.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroProgramCodeParameters.ItcmBlockInfoEndOffset">
            <summary>
            Gets or sets the end offset for the ITCM block info section.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroProgramCodeParameters.ItcmInputDataOffset">
            <summary>
            Gets or sets the ITCM input data offset.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroProgramCodeParameters.BssOffset">
            <summary>
            Gets or sets the BSS offset (non-initialized global/static variables area).
            </summary>
            <remarks>
            Usually this value matches with <see cref="P:SceneGate.Ekona.Containers.Rom.NitroProgramCodeParameters.ItcmInputDataOffset"/>
            because after moving the ITCM code, we can reuse that area.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroProgramCodeParameters.BssEndOffset">
            <summary>
            Gets or sets the end offset for BSS.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroProgramCodeParameters.CompressedLength">
            <summary>
            Gets or sets the program (arm9) compressed length.
            If 0, then the program is not compressed.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroProgramCodeParameters.SdkVersion">
            <summary>
            Gets or sets the SDK version.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.NitroRom">
            <summary>
            NDS cartridge file system.
            </summary>
            <remarks>
            <para>The container hierarchy is:</para>
            <list type="table">
            <listheader><term>Node path</term><description>Description</description></listheader>
            <item><term>/system</term><description>ROM information and program files.</description></item>
            <item><term>/system/info</term><description>Program information.</description></item>
            <item><term>/system/copyright_logo</term><description>Copyright logo.</description></item>
            <item><term>/system/banner/</term><description>Program banner.</description></item>
            <item><term>/system/banner/info</term><description>Program banner content.</description></item>
            <item><term>/system/banner/icon</term><description>Program icon.</description></item>
            <item><term>/system/banner/animated</term><description>Animated program icon.</description></item>
            <item><term>/system/banner/animated/bitmapX</term><description>Bitmap X (0-7) for the animated icon.</description></item>
            <item><term>/system/banner/animated/palettes</term><description>Palettes (0-7) for the animated icon.</description></item>
            <item><term>/system/banner/animated/animation</term><description>Animation icon information.</description></item>
            <item><term>/system/arm9</term><description>Program executable for ARM9 CPU.</description></item>
            <item><term>/system/overlays9</term><description>Overlay libraries for ARM9 CPU.</description></item>
            <item><term>/system/overlays9/overlay_X</term><description>Overlay X for ARM9 CPU.</description></item>
            <item><term>/system/arm7</term><description>Program executable for ARM7 CPU.</description></item>
            <item><term>/system/overlays7</term><description>Overlay libraries for ARM7 CPU.</description></item>
            <item><term>/system/overlays7/overlay7_X</term><description>Overlay X for ARM7 CPU.</description></item>
            <item><term>/data</term><description>Program data files.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.NitroRom.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SceneGate.Ekona.Containers.Rom.NitroRom"/> class.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroRom.NitroCode">
            <summary>
            Gets the Nitro constant in little endian: 2-10-6 (NiToRo in Japanese numbers) + 0xCODE.
            It's a marker for the program code to find constants.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroRom.System">
            <summary>
            Gets the container with the system files of the program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroRom.Data">
            <summary>
            Gets the container with the program data files.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroRom.Information">
            <summary>
            Gets the information of the program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroRom.Banner">
            <summary>
            Gets the banner of the program.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.NitroRom2Binary">
            <summary>
            Converter from NitroRom containers into binary format.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.NitroRom2Binary.Initialize(SceneGate.Ekona.Containers.Rom.NitroRom2BinaryParams)">
            <summary>
            Initializes the converter with the output stream for the next conversion.
            </summary>
            <param name="parameters">The output stream for the next conversion.</param>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.NitroRom2Binary.Convert(Yarhl.FileSystem.NodeContainerFormat)">
            <summary>
            Serializes a ROM container into NDS binary format.
            </summary>
            <param name="source">The ROM container to serialize.</param>
            <returns>Serialized binary stream.</returns>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.NitroRom2BinaryParams">
            <summary>
            Additional parameters for the <see cref="T:SceneGate.Ekona.Containers.Rom.NitroRom2Binary"/> converter.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroRom2BinaryParams.OutputStream">
            <summary>
            Gets or sets the output stream for the converter. If not set, the
            converter will create a new one in-memory.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroRom2BinaryParams.KeyStore">
            <summary>
            Gets or sets the key store to re-generate the HMAC hashes. If not set,
            the hashes are not regenerated.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.NitroRom2BinaryParams.DecompressedProgram">
            <summary>
            Gets or sets a value indicating whether the program (arm9) is decompressed.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.OverlayInfo">
            <summary>
            Information about a program overlay.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.OverlayInfo.OverlayId">
            <summary>
            Gets or sets the ID of the overlay.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.OverlayInfo.RamAddress">
            <summary>
            Gets or sets the address where the overlay will be load in the RAM.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.OverlayInfo.RamSize">
            <summary>
            Gets or sets the amount of bytes to load in RAM of the overlay.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.OverlayInfo.BssSize">
            <summary>
            Gets or sets the size of the BSS data region.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.OverlayInfo.StaticInitStart">
            <summary>
            Gets or sets the static initialization start address.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.OverlayInfo.StaticInitEnd">
            <summary>
            Gets or sets the static initialization end address.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.OverlayInfo.CompressedSize">
            <summary>
            Gets or sets the size of the overlay compressed or 0 if it is not compressed.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.OverlayInfo.IsCompressed">
            <summary>
            Gets or sets a value indicating whether the overlay is BLZ compressed.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.OverlayInfo.IsSigned">
            <summary>
            Gets or sets a value indicating whether this overlay is digitally signed.
            </summary>
            <remarks>
            The signature seems to be validated only when executing a program
            recived from other devices.
            </remarks>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.ProgramInfo">
            <summary>
            Information about the content of the program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.MinimumCartridgeSize">
            <summary>
            Gets the minimum cartridge size.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.GameTitle">
            <summary>
            Gets or sets the short game title.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.GameCode">
            <summary>
            Gets or sets the game code.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.MakerCode">
            <summary>
            Gets or sets the maker code.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.UnitCode">
            <summary>
            Gets or sets the unit code.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.EncryptionSeed">
            <summary>
            Gets or sets the index to encryption seed byte for KEY2.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.CartridgeSize">
            <summary>
            Gets or sets the size of the ROM cartridge.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.DsiCryptoFlags">
            <summary>
            Gets or sets the modcrypt flags for DSi.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.Region">
            <summary>
            Gets or sets the supported region.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.Version">
            <summary>
            Gets or sets the version of the program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.AutoStartFlag">
            <summary>
            Gets or sets the flags to skip parts of the autostart.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.Arm9EntryAddress">
            <summary>
            Gets or sets the entry address of the ARM-9.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.Arm9RamAddress">
            <summary>
            Gets or sets the address of the ARM-9 in the RAM.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.Arm7EntryAddress">
            <summary>
            Gets or sets the entry address of the ARM-7.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.Arm7RamAddress">
            <summary>
            Gets or sets the address of the ARM-7 in the RAM.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.FlagsRead">
            <summary>
            Gets or sets the control register flags for read.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.FlagsInit">
            <summary>
            Gets or sets the control register flags for init.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.ChecksumSecureArea">
            <summary>
            Gets or sets the checksum of the ARM-9 secure area.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.SecureAreaDelay">
            <summary>
            Gets or sets the secure area delay in 131kHz units.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.Arm9Autoload">
            <summary>
            Gets or sets the auto-load address of the ARM-9.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.Arm7Autoload">
            <summary>
            Gets or sets the auto-load address of the ARM-7.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.DisableSecureArea">
            <summary>
            Gets or sets a value indicating whether the ARM9 secure are encryption is disabled.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.ChecksumLogo">
            <summary>
            Gets or sets the checksum of the copyright logo.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.ChecksumHeader">
            <summary>
            Gets or sets the checksum of the header.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.DebugRomOffset">
            <summary>
            Gets or sets the debug ROM offset.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.DebugSize">
            <summary>
            Gets or sets the debug ROM size.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.DebugRamAddress">
            <summary>
            Gets or sets the debug ROM location in the RAM.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.Arm9ParametersTableOffset">
            <summary>
            Gets or sets the offset in the ARM9 pointing to some parameter values.
            Relative to the base RAM address for ARM9.
            </summary>
            <remarks>
            Only for DSi games and DS games released after the DSi. Otherwise 0.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.Arm7ParametersTableOffset">
            <summary>
            Gets or sets the offset in the ARM7 pointing to some parameter values.
            Relative to the base RAM address for ARM7.
            </summary>
            <remarks>
            Only for DSi games and DS games released after the DSi. Otherwise 0.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.ProgramFeatures">
            <summary>
            Gets or sets flags related to ROM features.
            </summary>
            <remarks>
            Only for DSi games and DS games released after the DSi. Otherwise 0.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.BannerMac">
            <summary>
            Gets or sets the SHA-1 HMAC of the banner.
            </summary>
            <remarks>
            Only for DSi games and DS games released after the DSi. Otherwise null.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.NitroProgramMac">
            <summary>
            Gets or sets the SHA-1 HMAC of the header, encrypted ARM9 and ARM7 programs.
            </summary>
            <remarks>
            Only for DS games released after the DSi. Otherwise null.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.NitroOverlaysMac">
            <summary>
            Gets or sets the SHA-1 HMAC of the overlays of the ARM9.
            </summary>
            <remarks>
            Only for DS games released after the DSi. Otherwise null.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.Signature">
            <summary>
            Gets or sets the RSA SHA-1 signature of the ROM header.
            </summary>
            <remarks>
            Only for DSi games and DS games released after the DSi. Otherwise null.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.DsiInfo">
            <summary>
            Gets or sets the information exclusive to DSi programs.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.ProgramCodeParameters">
            <summary>
            Gets or sets the program code (arm9) parameters.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.Overlays9Info">
            <summary>
            Gets or sets the collection of information of overlays for ARM-9.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.ProgramInfo.Overlays7Info">
            <summary>
            Gets or sets the collection of information of overlays for ARM-7.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.ProgramRegions">
            <summary>
            Supported regions for the program.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ProgramRegions.NitroBase">
            <summary>
            Typical Nintendo supported regions for DS.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ProgramRegions.Japan">
            <summary>
            Japan region (DSi only).
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ProgramRegions.Usa">
            <summary>
            USA region (DSi only).
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ProgramRegions.Europe">
            <summary>
            Europe region (DSi only).
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ProgramRegions.Australia">
            <summary>
            Australia region (DSi only).
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ProgramRegions.China">
            <summary>
            China region.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ProgramRegions.Korea">
            <summary>
            Korea region.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ProgramRegions.RegionFree">
            <summary>
            Region free, support on all possible regions.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.ProgramStartJumpKind">
            <summary>
            The kind of program start jump at launch.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ProgramStartJumpKind.Normal">
            <summary>
            Normal jump copying header in the RAM.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ProgramStartJumpKind.SystemMenu">
            <summary>
            Special / temporary launch used for the system menu.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.RomHeader">
            <summary>
            Header of the program in a ROM.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomHeader.ProgramInfo">
            <summary>
            Gets or sets the information of the program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomHeader.SectionInfo">
            <summary>
            Gets or sets the information of the sections of the ROM.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomHeader.CopyrightLogo">
            <summary>
            Gets or sets the compressed copyright logo.
            </summary>
            <remarks>
            <para>The logo is compressed with Huffman with a header present in the BIOS.</para>
            <para>The logo must be the original or the device won't boot the game.</para>
            </remarks>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.RomHeader2Binary">
            <summary>
            Converter for ROM header object into binary stream (serialization).
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.RomHeader2Binary.Initialize(SceneGate.Ekona.Security.DsiKeyStore)">
            <summary>
            Initialize the converter with the key store to enable additional features.
            </summary>
            <remarks>
            The key store is used to generate a special token if `DisableSecureArea` is `true`.
            Otherwise, it will always write 0. The required key is `BlowfishDsKey`.
            </remarks>
            <param name="parameters">The converter parameters.</param>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Containers.Rom.RomHeader2Binary.Convert(SceneGate.Ekona.Containers.Rom.RomHeader)">
            <summary>
            Serialize a ROM header object into a binary stream.
            </summary>
            <param name="source">The header to convert.</param>
            <returns>The new binary stream.</returns>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.RomSectionInfo">
            <summary>
            Information about the different sections of the ROM.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.Arm9Offset">
            <summary>
            Gets or sets the offset of the ARM-9 program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.Arm9Size">
            <summary>
            Gets or sets the size of the ARM-9 program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.Arm7Offset">
            <summary>
            Gets or sets the offset of the ARM-7 program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.Arm7Size">
            <summary>
            Gets or sets the size of the ARM-7 program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.FntOffset">
            <summary>
            Gets or sets the offset to the file name table.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.FntSize">
            <summary>
            Gets or sets the size of the file name table.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.FatOffset">
            <summary>
            Gets or sets the offset of the file access table.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.FatSize">
            <summary>
            Gets or sets the size of the file access table.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.Overlay9TableOffset">
            <summary>
            Gets or sets the offset of the table of overlays for ARM-9 program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.Overlay9TableSize">
            <summary>
            Gets or sets the size of the table of overlays for ARM-9 program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.Overlay7TableOffset">
            <summary>
            Gets or sets the offset of the table of overlays for ARM-7 program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.Overlay7TableSize">
            <summary>
            Gets or sets the size of the table of overlays for ARM-7 program.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.BannerOffset">
            <summary>
            Gets or sets the offset of the program banner.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.RomSize">
            <summary>
            Gets or sets the exact size of the ROM.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.HeaderSize">
            <summary>
            Gets or sets the size of the header.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.NitroRegionEnd">
            <summary>
            Gets or sets the DS region end.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.TwilightRegionStart">
            <summary>
            Gets or sets the DSi region start.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.Arm9iOffset">
            <summary>
            Gets or sets the offset for the ARM-9 program for DSi devices.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.Arm9iSize">
            <summary>
            Gets or sets the size of the ARM-9 program for DSi devices.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.Arm7iOffset">
            <summary>
            Gets or sets the offset for the ARM-7 program for DSi devices.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.Arm7iSize">
            <summary>
            Gets or sets the size of the ARM-7 program for DSi devices.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.DigestNitroOffset">
            <summary>
            Gets or sets the offset for the data to digest (hash) of the DS ROM section.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.DigestNitroLength">
            <summary>
            Gets or sets the length for the data to digest (hash) for the DS ROM section.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.DigestTwilightOffset">
            <summary>
            Gets or sets the offset for the data to digest (hash) of the DSi ROM section.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.DigestTwilightLength">
            <summary>
            Gets or sets the offset for the data to digest (hash) of the DSi ROM section.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.DigestSectorHashtableOffset">
            <summary>
            Gets or sets the offset for the digest hash table of sectors.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.DigestSectorHashtableLength">
            <summary>
            Gets or sets the length of the digest hash table of sectors.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.DigestBlockHashtableOffset">
            <summary>
            Gets or sets the offset for the digest hash table of blocks (hashes of sectors).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.DigestBlockHashtableLength">
            <summary>
            Gets or sets the length of the digest hash table of blocks (hashes of sectors).
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.DigestSectorSize">
            <summary>
            Gets or sets the size for each sector digest.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.DigestBlockSectorCount">
            <summary>
            Gets or sets the number of sectors to hash per block.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.BannerLength">
            <summary>
            Gets or sets the banner length.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.DsiRomLength">
            <summary>
            Gets or sets the ROM size including the DSi section.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.ModcryptArea1Offset">
            <summary>
            Gets or sets the offset for the first area modcrypted in the ROM.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.ModcryptArea1Length">
            <summary>
            Gets or sets the length for the first area modcrypted in the ROM.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.ModcryptArea2Offset">
            <summary>
            Gets or sets the offset for the second area modcrypted in the ROM.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Containers.Rom.RomSectionInfo.ModcryptArea2Length">
            <summary>
            Gets or sets the length for the second area modcrypted in the ROM.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.ScfgExtendedFeaturesArm7">
            <summary>
            Define the control register (SCFG) extended features for DSi ARM7.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ScfgExtendedFeaturesArm7.None">
            <summary>
            No setting set.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ScfgExtendedFeaturesArm7.RevisedArm7DmaCircuit">
            <summary>
            Use the revised ARM7 DMA circuit instead of the nitro (DS) one.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ScfgExtendedFeaturesArm7.RevisedSoundDma">
            <summary>
            Use the revised sound DMA instead of the nitro (DS) one.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ScfgExtendedFeaturesArm7.RevisedSound">
            <summary>
            Use the revised sound instead of the nitro (DS) one.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ScfgExtendedFeaturesArm7.ExtendedSoundDma">
            <summary>
            Use the extended sound DMA instead of the nitro (DS) one.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ScfgExtendedFeaturesArm7.AccessStorageRegisters">
            <summary>
            Allow access to the SD/eMMC registers.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.ScfgExtendedFeaturesArm7.AccessScfgMbkRegisters">
            <summary>
            Allow access to the SCFG/MBK registers.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Containers.Rom.TwilightAccessControl">
            <summary>
            Access control of DSi (Twilight) software.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.None">
            <summary>
            No access control set.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.CommonClientKey">
            <summary>
            Use "common key" -> 0x3080F000 = 0x03FFC600 + 0x00.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.AesSlotB">
            <summary>
            Use AES slot B -> 0x0380F010 = 0x03FFC400 + 0x180 and KEY1 unchanged.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.AesSlotC">
            <summary>
            Use AES slot C -> 0x0380F020 = 0x03FFC400 + 0x190 and KEY2.Y = 0x03FFC400 + 0x1A0.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.SdCard">
            <summary>
            Allow access to SD Card device (I).
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.NandAccess">
            <summary>
            Allow access to NAND (device A-H and KEY3 intact).
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.GameCardPowerOn">
            <summary>
            Game card power on.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.Shared2File">
            <summary>
            Software uses shared2 file from storage SD/eMMC.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.SignJpegForLauncher">
            <summary>
            Sign the camera photo JPEG files for launcher (AES slot B).
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.GameCardNitroMode">
            <summary>
            Game card nitro mode.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.SslClientCert">
            <summary>
            SSL client certificates (AES slot A) -> KEY0 = 0x03FFC600 + 0x30.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.SignJpegForUser">
            <summary>
            Sign the camera photo JPEG files for the user (AES slot B).
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.PhotoReadAccess">
            <summary>
            Allow read access for photos.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.PhotoWriteAccess">
            <summary>
            Allow write access for photos.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.SdCardReadAccess">
            <summary>
            Allow read access to the SD card.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.SdCardWriteAccess">
            <summary>
            Allow write access to the SD card.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.GameCardSaveReadAccess">
            <summary>
            Read access to cartridge save files.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.GameCardSaveWriteAccess">
            <summary>
            Write access to cartridge save files.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Containers.Rom.TwilightAccessControl.DebuggerCommonClientKey">
            <summary>
            Debugger common client key -> 0x0380F000 = 0x03FFC600 + 0x10.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Security.DsiKeyStore">
            <summary>
            Store of DSi (and new DS games) keys.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Security.DsiKeyStore.BlowfishDsKey">
            <summary>
            Gets or sets the key for the Blowfish (KEY1) encryption of DS mode.
            </summary>
            <remarks>
            The key can be found in the DS ARM7 BIOS from 0x30 to 0x1077.
            It starts with `99 D5 20 5F` and has 0x1048 bytes.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Security.DsiKeyStore.HMacKeyWhitelist12">
            <summary>
            Gets or sets the HMAC key for the DS whitelist phases 1 and 2.
            </summary>
            <remarks>
            The key can be found in the DSi launcher application ARM9.
            For instance, at position 0270EC90h of the RAM.
            It starts with `61 BD DD 72` and has 0x40 bytes.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Security.DsiKeyStore.HMacKeyWhitelist34">
            <summary>
            Gets or sets the HMAC key for the DS whitelist phases 3 and 4.
            </summary>
            <remarks>
            The key can be found in the DSi launcher application ARM9.
            For instance, at position 0270ECD0h of the RAM.
            It starts with `85 29 48 F3` and has 0x40 bytes.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Security.DsiKeyStore.HMacKeyDSiGames">
            <summary>
            Gets or sets the HMAC key used in DSi games (like banner HMAC) but also
            in some DS games to verify the (compressed) overlays in download play load mode.
            </summary>
            <remarks>
            The key can be found inside the ARM9 of most DS and DSi games and in the launcher.
            It has 0x40 bytes and starts with `21 06 C0 DE BA 98`.
            It seems to start with the "nitrocode" token and it would be the second one in the ARM9.
            </remarks>
        </member>
        <member name="P:SceneGate.Ekona.Security.DsiKeyStore.PublicModulusRetailGames">
            <summary>
            Gets or sets the modulus of the RSA public key used to sign DSi retail games.
            </summary>
            <remarks>
            The data can be found in the ARM9 BIOS of the DSi at position 0x8974.
            It starts with `95 6F 79 0D` and has 0x80 bytes.
            </remarks>
        </member>
        <member name="T:SceneGate.Ekona.Security.HashInfo">
            <summary>
            Information of a data hash.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Security.HashInfo.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:SceneGate.Ekona.Security.HashInfo"/>  class.
            </summary>
            <param name="algoName">The name of the hashing algorithm.</param>
            <param name="hash">The hash data.</param>
        </member>
        <member name="M:SceneGate.Ekona.Security.HashInfo.#ctor(System.String,System.Byte[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SceneGate.Ekona.Security.HashInfo"/>  class.
            </summary>
            <param name="algoName">The name of the hashing algorithm.</param>
            <param name="hash">The hash data.</param>
            <param name="isValid">Value indicating whether this signature is valid.</param>
        </member>
        <member name="P:SceneGate.Ekona.Security.HashInfo.AlgorithmName">
            <summary>
            Gets the hashing algorithm name.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Security.HashInfo.Hash">
            <summary>
            Gets the hash.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Security.HashInfo.IsNull">
            <summary>
            Gets a value indicating whether the hash is null.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Security.HashInfo.Status">
            <summary>
            Gets or sets the status of the hash.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Security.HashInfo.Validate(System.Byte[])">
            <summary>
            Validate this hash against the provided one.
            </summary>
            <param name="actualHash">The hash to compare.</param>
        </member>
        <member name="M:SceneGate.Ekona.Security.HashInfo.ChangeHash(System.Byte[])">
            <summary>
            Change the hash, like after computing it again.
            </summary>
            <param name="newHash">The new hash.</param>
        </member>
        <member name="T:SceneGate.Ekona.Security.HashStatus">
            <summary>
            Validation status of a hash.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Security.HashStatus.NotValidated">
            <summary>
            The hash has not been validated yet.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Security.HashStatus.Valid">
            <summary>
            The hash has been validated and is valid.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Security.HashStatus.Invalid">
            <summary>
            The hash has been validated and is not valid.
            </summary>
        </member>
        <member name="F:SceneGate.Ekona.Security.HashStatus.Generated">
            <summary>
            The hash has been regenerated from the data, so it's valid.
            </summary>
        </member>
        <member name="T:SceneGate.Ekona.Security.IOExtensions">
            <summary>
            Internal method extensions.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Security.IOExtensions.ReadCrc16(Yarhl.IO.DataReader)">
            <summary>
            Read a CRC-16 value and verify it matches the region of data.
            </summary>
            <param name="reader">The data reader with the stream to verify.</param>
            <returns>The information about the checksum verification.</returns>
        </member>
        <member name="M:SceneGate.Ekona.Security.IOExtensions.ReadHmacSha1(Yarhl.IO.DataReader)">
            <summary>
            Read a SHA-1 HMAC.
            </summary>
            <param name="reader">The data reader with the stream to read the HMAC.</param>
            <returns>The information about the HMAC verification.</returns>
        </member>
        <member name="M:SceneGate.Ekona.Security.IOExtensions.ReadSignatureSha1Rsa(Yarhl.IO.DataReader)">
            <summary>
            Read a RSA-SHA1 signature.
            </summary>
            <param name="reader">The data reader with the stream to read the signature.</param>
            <returns>The information about the signature.</returns>
        </member>
        <member name="T:SceneGate.Ekona.Security.Modcrypt">
            <summary>
            Twilight modcrypt encryption (AES-CTR).
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Security.Modcrypt.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:SceneGate.Ekona.Security.Modcrypt" /> class.
            </summary>
            <param name="iv">The initialization value.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:SceneGate.Ekona.Security.Modcrypt.Create(SceneGate.Ekona.Containers.Rom.ProgramInfo,System.Int32)">
            <summary>
            Create a <see cref="T:SceneGate.Ekona.Security.Modcrypt" /> for a twilight program.
            </summary>
            <param name="programInfo">Information of the program to initialize encryption.</param>
            <param name="area">Modcrypt area 1 or 2.</param>
            <returns>The initialized encryption.</returns>
            <exception cref="T:System.ArgumentException">Area is not 1/2 or the program flags disable modcrypt.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Security.Modcrypt.Transform(System.IO.Stream)">
            <summary>
            Encrypt or decrypt (same operation) the input into a new stream.
            </summary>
            <param name="input">The input data.</param>
            <returns>The decrypted or encrypted data.</returns>
        </member>
        <member name="T:SceneGate.Ekona.Security.NitroBlowfish">
            <summary>
            Encrypt and decrypt with the blowfish based algorithm used in DS.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Security.NitroBlowfish.KeyLength">
            <summary>
            Gets the required length of the key.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroBlowfish.Initialize(System.String,System.Int32,System.Int32,System.Byte[])">
            <summary>
            Initialize the algorithm.
            </summary>
            <param name="idText">The ID code to initialize the key.</param>
            <param name="level">The level of key initialization.</param>
            <param name="modulo">The modulo to initialize the key.</param>
            <param name="key">The key data of 0x1048 bytes.</param>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroBlowfish.Encrypt(System.UInt32@,System.UInt32@)">
            <summary>
            Encrypt a 64-bits value as two pair of 64-bits.
            </summary>
            <param name="data0">The first pair of 32-bits to encrypt and store result.</param>
            <param name="data1">The second pair of 32-bits to encrypt and store result.</param>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroBlowfish.Encrypt(System.IO.Stream)">
            <summary>
            Encrypt a complete stream over itself.
            </summary>
            <param name="stream">The stream with the decrypted the data that will be overwritten encrypted.</param>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroBlowfish.Encrypt(System.ReadOnlySpan{System.Byte})">
            <summary>
            Encrypt an array of bytes.
            </summary>
            <param name="data">Data to encrypt.</param>
            <returns>A new array with the encrypted data.</returns>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroBlowfish.Decrypt(System.UInt32@,System.UInt32@)">
            <summary>
            Decrypt a 64-bits value as two pair of 32-bits.
            </summary>
            <param name="data0">The first pair of 32-bits to decrypt and store result.</param>
            <param name="data1">The second pair of 32-bits to decrypt and store result.</param>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroBlowfish.Decrypt(System.IO.Stream)">
            <summary>
            Decrypt a complete stream over itself.
            </summary>
            <param name="stream">The stream with the decrypted the data that will be overwritten encrypted.</param>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroBlowfish.Decrypt(System.ReadOnlySpan{System.Byte})">
            <summary>
            Decrypt an array of bytes.
            </summary>
            <param name="data">Data to decrypt.</param>
            <returns>A new array with the decrypted data.</returns>
        </member>
        <member name="T:SceneGate.Ekona.Security.NitroCrcGenerator">
            <summary>
            Generate CRC compatible with Nitro devices.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroCrcGenerator.GenerateCrc16(System.IO.Stream)">
            <summary>
            Generate a CRC16-MODBUS of the data.
            </summary>
            <param name="stream">The data to read.</param>
            <returns>The CRC of the data in little endian.</returns>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroCrcGenerator.GenerateCrc16(System.IO.Stream,System.Int64,System.Int64)">
            <summary>
            Generate a CRC16-MODBUS of the data.
            </summary>
            <param name="stream">The data to read.</param>
            <param name="offset">The offset to start reading data.</param>
            <param name="length">The length of the data.</param>
            <returns>The CRC of the data in little endian.</returns>
        </member>
        <member name="T:SceneGate.Ekona.Security.NitroKey1Encryption">
            <summary>
            Encrypt and decrypt specific DS content with the KEY1 algorithm (blowfish).
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroKey1Encryption.#ctor(System.String,SceneGate.Ekona.Security.DsiKeyStore)">
            <summary>
            Initializes a new instance of the <see cref="T:SceneGate.Ekona.Security.NitroKey1Encryption" /> class.
            </summary>
            <param name="gameCode">The DS game code.</param>
            <param name="keyStore">The store with the DS keys.</param>
            <exception cref="T:System.ArgumentNullException">The arguments are null or .</exception>
            <exception cref="T:System.ArgumentException">The game code does not have length 4.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroKey1Encryption.HasDisabledSecureArea(System.Byte[])">
            <summary>
            Decrypt the DS header token and verify if its content that indicates the secure are is disabled.
            </summary>
            <param name="token">The encrypted token from the DS header.</param>
            <returns>A value indicating whether the secure area is disabled.</returns>
            <exception cref="T:System.ArgumentException">The token does not have the expected length 8.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroKey1Encryption.GenerateEncryptedDisabledSecureAreaToken">
            <summary>
            Generate an encrypted token for the DS header to indicate that the secure are should be disabled.
            </summary>
            <returns>The encrypted token.</returns>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroKey1Encryption.HasValidSecureAreaId(System.Byte[])">
            <summary>
            Decrypt the secure area ID and verify if its content match the expected result.
            </summary>
            <param name="data">The encrypted secure area ID.</param>
            <returns>A value indicating whether the encrypted secure area ID is valid.</returns>
            <exception cref="T:System.ArgumentException">The argument does not have the expected length 8.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroKey1Encryption.GenerateEncryptedSecureAreaId">
            <summary>
            Generate an encrypted secure area ID.
            </summary>
            <returns>The encrypted secure area ID.</returns>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroKey1Encryption.HasEncryptedArm9(System.IO.Stream)">
            <summary>
            Check if the ARM9 stream has an encrypted secure area.
            </summary>
            <param name="arm9">The ARM9 program to verify.</param>
            <returns>A value indicating whether the stream has an encrypted secure area.</returns>
            <exception cref="T:System.ArgumentException">The ARM9 is smaller than expected (2 KB).</exception>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroKey1Encryption.EncryptArm9(System.IO.Stream)">
            <summary>
            Encrypt the secure area of the ARM9 program.
            </summary>
            <param name="arm9">The ARM9 program to encrypt its secure area.</param>
            <returns>A copy of the ARM9 program with the secure area encrypted.</returns>
            <exception cref="T:System.ArgumentException">The program is smaller than expected (2 KB).</exception>
        </member>
        <member name="M:SceneGate.Ekona.Security.NitroKey1Encryption.DecryptArm9(System.IO.Stream)">
            <summary>
            Decrypt the secure area of the ARM9 program.
            </summary>
            <param name="arm9">The ARM9 program to decrypt its secure area.</param>
            <returns>A copy of the ARM9 program with the secure area decrypted.</returns>
            <exception cref="T:System.ArgumentException">The program is smaller than expected (2 KB).</exception>
        </member>
        <member name="T:SceneGate.Ekona.Security.TwilightHMacGenerator">
            <summary>
            Generate different hashes, HMAC and signatures of DS and DSi ROMs.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightHMacGenerator.#ctor(SceneGate.Ekona.Security.DsiKeyStore)">
            <summary>
            Initializes a new instance of the <see cref="T:SceneGate.Ekona.Security.TwilightHMacGenerator"/> class.
            </summary>
            <param name="keyStore">Store with the keys.</param>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightHMacGenerator.GeneratePhase1Hmac(System.IO.Stream,System.IO.Stream,SceneGate.Ekona.Containers.Rom.RomSectionInfo)">
            <summary>
            Generate the DS whitelist phase 1 HMAC (header, encrypted ARM9 and ARM7).
            </summary>
            <param name="romStream">ROM stream with the content to generate the hash.</param>
            <param name="encryptedArm9">Encrypted ARM9 to use for the hash.</param>
            <param name="sectionInfo">Information of different ROM sections.</param>
            <returns>HMAC for the whitelist phase 1.</returns>
            <exception cref="T:System.InvalidOperationException">The key for the whitelist phase 1 is missing.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightHMacGenerator.GeneratePhase2Hmac(System.IO.Stream,SceneGate.Ekona.Containers.Rom.RomSectionInfo)">
            <summary>
            Generate the whitelist phase 2 HMAC (overlay9).
            </summary>
            <param name="romStream">ROM stream with the content to generate the hash.</param>
            <param name="sectionInfo">Information of different ROM sections.</param>
            <returns>HMAC for the whitelist phase 2.</returns>
            <exception cref="T:System.InvalidOperationException">The key for the whitelist phase 2 is missing.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightHMacGenerator.GeneratePhase3Hmac(System.IO.Stream,SceneGate.Ekona.Containers.Rom.ProgramInfo,SceneGate.Ekona.Containers.Rom.RomSectionInfo)">
            <summary>
            Generate the whitelist phase 3 HMAC (banner with titles and icons).
            </summary>
            <param name="romStream">ROM stream with the content to generate the hash.</param>
            <param name="programInfo">Program information to determine if the target is DSi or DS.</param>
            <param name="sectionInfo">Information of different ROM sections.</param>
            <returns>HMAC for the whitelist phase 3.</returns>
            <exception cref="T:System.InvalidOperationException">The key for the whitelist phase 3 is missing.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightHMacGenerator.GenerateHmac(System.IO.Stream)">
            <summary>
            Generate the HMAC of the stream.
            </summary>
            <param name="stream">Stream to generate MAC.</param>
            <returns>HMAC of the stream.</returns>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightHMacGenerator.GenerateDigestBlockHmac(System.IO.Stream,SceneGate.Ekona.Containers.Rom.RomSectionInfo)">
            <summary>
            Generate the HMAC of the DSi program digest block.
            </summary>
            <param name="romStream">ROM stream with the content to generate the hash.</param>
            <param name="sectionInfo">Information of different ROM sections.</param>
            <returns>HMAC of the digest block.</returns>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightHMacGenerator.GenerateArm9NoSecureAreaHmac(System.IO.Stream,SceneGate.Ekona.Containers.Rom.RomSectionInfo)">
            <summary>
            Generate the HMAC of the ARM9 without secure area.
            </summary>
            <param name="romStream">ROM stream with the content to generate the hash.</param>
            <param name="sectionInfo">Information of different ROM sections.</param>
            <returns>HMAC of the ARM9 with no secure area.</returns>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightHMacGenerator.VerifyDigestBlock(System.IO.Stream,SceneGate.Ekona.Containers.Rom.RomSectionInfo)">
            <summary>
            Verify if the digest block hashes (to the sector hashes) are valid.
            </summary>
            <param name="romStream">ROM stream with the content to validate.</param>
            <param name="sectionInfo">Information of different ROM sections.</param>
            <returns>The status if the digest block area is valid or not.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The block area is incomplete.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightHMacGenerator.WriteDigestBlock(System.IO.Stream,SceneGate.Ekona.Containers.Rom.RomSectionInfo)">
            <summary>
            Write the digest block (hashes of digest section).
            </summary>
            <param name="romStream">ROM to generate hashes and write result.</param>
            <param name="sectionInfo">Information of different ROM sections.</param>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightHMacGenerator.GenerateDigestBlockHashes(System.IO.Stream,SceneGate.Ekona.Containers.Rom.RomSectionInfo)">
            <summary>
            Generate the digest block hashes (to the sector hashes) .
            </summary>
            <param name="romStream">ROM stream with the content to validate.</param>
            <param name="sectionInfo">Information of different ROM sections.</param>
            <returns>Collection of digest block hashes.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The block area is incomplete.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightHMacGenerator.VerifyDigestSectionContent(System.IO.Stream,System.IO.Stream,Yarhl.FileSystem.Node,SceneGate.Ekona.Containers.Rom.RomSectionInfo)">
            <summary>
            Verify if the digest section content hashes (to the ROM data) are valid.
            </summary>
            <param name="romStream">ROM stream with the content to validate.</param>
            <param name="encryptedArm9">ARM9 stream with encrypted secure area.</param>
            <param name="systemNode">Container node with modcrypt decrypted system programs.</param>
            <param name="sectionInfo">Information of different ROM sections.</param>
            <returns>The status if the digest section is valid or not.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The section area or ROM is incomplete.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightHMacGenerator.WriteDigestSectionContent(System.IO.Stream,System.IO.Stream,Yarhl.FileSystem.Node,SceneGate.Ekona.Containers.Rom.RomSectionInfo)">
            <summary>
            Write the digest section content hashes (to the ROM data).
            </summary>
            <param name="romStream">ROM stream with the content to validate and to write.</param>
            <param name="encryptedArm9">ARM9 stream with encrypted secure area.</param>
            <param name="systemNode">Container node with modcrypt decrypted system programs.</param>
            <param name="sectionInfo">Information of different ROM sections.</param>
            <exception cref="T:System.IO.EndOfStreamException">The section area or ROM is incomplete.</exception>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightHMacGenerator.GenerateDigestSectionHashes(System.IO.Stream,System.IO.Stream,Yarhl.FileSystem.Node,SceneGate.Ekona.Containers.Rom.RomSectionInfo)">
            <summary>
            Generate the hashes of the digest section (with the ROM data).
            </summary>
            <param name="romStream">ROM stream with the content to validate.</param>
            <param name="encryptedArm9">ARM9 stream with encrypted secure area.</param>
            <param name="systemNode">Container node with modcrypt decrypted system programs.</param>
            <param name="sectionInfo">Information of different ROM sections.</param>
            <returns>Collection of hashes for the digest section.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The section area or ROM is incomplete.</exception>
        </member>
        <member name="T:SceneGate.Ekona.Security.TwilightSigner">
            <summary>
            Signer for DSi data.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightSigner.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:SceneGate.Ekona.Security.TwilightSigner"/> class.
            </summary>
            <param name="publicModulus">The modulus of the public key.</param>
        </member>
        <member name="P:SceneGate.Ekona.Security.TwilightSigner.Exponent">
            <summary>
            Gets the exponent part of the key.
            </summary>
        </member>
        <member name="P:SceneGate.Ekona.Security.TwilightSigner.PublicModulus">
            <summary>
            Gets the modulus part of the public key.
            </summary>
        </member>
        <member name="M:SceneGate.Ekona.Security.TwilightSigner.VerifySignature(System.Byte[],System.IO.Stream)">
            <summary>
            Verify the program signature.
            </summary>
            <param name="signature">Signature to verify.</param>
            <param name="romStream">Data to verify the signature against.</param>
            <returns>The validity of the signature.</returns>
        </member>
    </members>
</doc>
